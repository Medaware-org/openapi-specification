openapi: 3.0.3

info:
  title: Medaware Catalyst
  description: The API Specification for Medaware
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Local development environment

paths:
  /:
    get:
      operationId: catalystStatus
      summary: Catalyst status endpoint
      tags:
        - Status
      responses:
        200:
          description: Medaware Catalyst is up and running
          content:
            text/plain:
              schema:
                type: string

  /antg/compile:
    post:
      operationId: compileAnterogradia
      summary: Compile Anterogradia sources
      tags:
        - Anterogradia
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: Compilation successful
          content:
            text/html:
              schema:
                type: string

  /tan/login:
    post:
      operationId: tangentialLogin
      summary: Log-in to the Tangential system
      tags:
        - Tangential-Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tangentialLoginRequest"
      responses:
        200:
          description: Log-in successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tangentialSessionResponse"

  /tan/logout:
    post:
      operationId: tangentialLogout
      summary: Invalidate the current maintainer's session
      tags:
        - Tangential-Auth
      responses:
        200:
          description: Logged out

  /tan/whoami:
    get:
      operationId: tangentialWhoAmI
      summary: Return the current maintainer's basic info
      tags:
        - Tangential-Auth
      responses:
        200:
          description: Basic maintainer details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/basicMaintainerResponse"

  /tan/articles/{selector}:
    get:
      operationId: listArticles
      summary: Get a list of articles written by the specified selector
      tags:
        - Tangential-Content
      parameters:
        - in: path
          required: true
          name: selector
          description: Specifies the users whose articles should be listed; User ID for a specified user, 'current' for the currently logged-in user, or 'all' for no filtering
          schema:
            type: string
      responses:
        200:
          description: Articles returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/articleListing"

  /tan/article:
    post:
      operationId: createArticle
      summary: Create a new article
      tags:
        - Tangential-Content
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/articleCreationRequest"
      responses:
        200:
          description: Article was created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/articleResponse"

  /tan/metadata/{elementId}:
    put:
      operationId: putMetadata
      summary: Put a metadata tag on a given sequential element
      tags:
        - Tangential-Content
      parameters:
        - in: path
          name: elementId
          description: ID of the host sequential element
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/metadataCreateRequest"
      responses:
        200:
          description: Metadata element created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/metadataEntry"
    get:
      operationId: getMetadata
      summary: Get all metadata of a given element
      tags:
        - Tangential-Content
      parameters:
        - in: path
          name: elementId
          description: ID of the host sequential element
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Metadata entries of the given element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/metadataListing"


components:
  schemas:
    tangentialLoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    tangentialSessionResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string

    catalystError:
      type: object
      required:
        - summary
        - message
      properties:
        summary:
          type: string
        message:
          type: string

    articleListing:
      type: array
      items:
        $ref: "#/components/schemas/articleResponse"

    articleResponse:
      type: object
      required:
        - author
        - title
        - date
      properties:
        author:
          type: string
        title:
          type: string
        date:
          type: string
          format: date
        id:
          type: string
          format: uuid

    articleCreationRequest:
      type: object
      required:
        - title
      properties:
        title:
          type: string

    basicMaintainerResponse:
      type: object
      required:
        - firstName
        - lastName
        - displayName
      properties:
        firstName:
          type: string
        lastName:
          type: string
        displayName:
          type: string

    metadataCreateRequest:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
        value:
          type: string

    metadataEntry:
      type: object
      required:
        - key
        - value
        - id
      properties:
        key:
          type: string
        value:
          type: string
        id:
          type: string
          format: uuid

    metadataListing:
      type: array
      items:
        $ref: "#/components/schemas/metadataEntry"